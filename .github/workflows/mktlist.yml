name: Publish MktList

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 0 1 */3 * *

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Download GeoLite.mmdb
      run: |
        ls -la
        pwd
        curl -s https://antifilter.network/download/ip.lst > rkn_ips.lst
        curl -s https://antifilter.network/download/ipsum.lst >> rkn_ips.lst
        curl -s https://antifilter.network/download/subnet.lst >> rkn_ips.lst
        sh -c ./script.sh rkn_ips.lst
        cp rkn_ips.lst > subnets.rsc
        mkdir -p upload
        cp -v subnets.rsc upload
        echo "TAG_NAME=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: Push to "download" branch
      run: |
        cd upload
        git init
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git checkout -b download
        git add .
        git commit -m "${{ env.TAG_NAME }}"
        git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
        git push -f origin download

    - name: Upload to Releases
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        body: ${{ env.TAG_NAME }}
        files: upload/*.mmdb

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 2
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
